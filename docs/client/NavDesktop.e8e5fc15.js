import { S as SvelteComponent, i as init, s as safe_not_equal, l as element, z as text, x as space, p as claim_element, q as children, y as claim_text, d as detach, B as toggle_class, a as insert, t as append, n as noop, H as destroy_each } from './chunk.1a0f83e2.js';
import { m as menuRoutes } from './chunk.ac4dc9d7.js';

/* src/components/NavDesktop.svelte generated by Svelte v3.4.4 */

function get_each_context(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.path = list[i].path;
	child_ctx.icon = list[i].icon;
	child_ctx.title = list[i].title;
	return child_ctx;
}

// (8:1) {#each menuRoutes as { path, icon, title }}
function create_each_block(ctx) {
	var div, a, t0_value = ctx.title, t0, a_href_value, t1;

	return {
		c() {
			div = element("div");
			a = element("a");
			t0 = text(t0_value);
			t1 = space();
			this.h();
		},

		l(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			a = claim_element(div_nodes, "A", { class: true, href: true }, false);
			var a_nodes = children(a);

			t0 = claim_text(a_nodes, t0_value);
			a_nodes.forEach(detach);
			t1 = claim_text(div_nodes, "\n\t\t");
			div_nodes.forEach(detach);
			this.h();
		},

		h() {
			a.className = "item-title";
			a.href = a_href_value = ctx.path;
			div.className = "item-container svelte-p34j56";
			toggle_class(div, "selected", ctx.segment === ctx.path);
		},

		m(target, anchor) {
			insert(target, div, anchor);
			append(div, a);
			append(a, t0);
			append(div, t1);
		},

		p(changed, ctx) {
			if ((changed.segment || changed.menuRoutes)) {
				toggle_class(div, "selected", ctx.segment === ctx.path);
			}
		},

		d(detaching) {
			if (detaching) {
				detach(div);
			}
		}
	};
}

function create_fragment(ctx) {
	var nav;

	var each_value = menuRoutes;

	var each_blocks = [];

	for (var i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			nav = element("nav");

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}
			this.h();
		},

		l(nodes) {
			nav = claim_element(nodes, "NAV", { class: true }, false);
			var nav_nodes = children(nav);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nav_nodes);
			}

			nav_nodes.forEach(detach);
			this.h();
		},

		h() {
			nav.className = "container svelte-p34j56";
		},

		m(target, anchor) {
			insert(target, nav, anchor);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(nav, null);
			}
		},

		p(changed, ctx) {
			if (changed.segment || changed.menuRoutes) {
				each_value = menuRoutes;

				for (var i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(changed, child_ctx);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(nav, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}
				each_blocks.length = each_value.length;
			}
		},

		i: noop,
		o: noop,

		d(detaching) {
			if (detaching) {
				detach(nav);
			}

			destroy_each(each_blocks, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { segment = '' } = $$props;

	$$self.$set = $$props => {
		if ('segment' in $$props) $$invalidate('segment', segment = $$props.segment);
	};

	return { segment };
}

class NavDesktop extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, ["segment"]);
	}
}

export default NavDesktop;
//# sourceMappingURL=NavDesktop.e8e5fc15.js.map
