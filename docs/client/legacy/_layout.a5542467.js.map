{"version":3,"file":"_layout.a5542467.js","sources":["../../../../src/util/debounce.js","../../../../src/stores/dimensions.js","../../../../src/components/DimensionAware.svelte","../../../../src/components/FlatButton.svelte","../../../../src/components/ToolbarMobile.svelte","../../../../src/components/Drawer.svelte","../../../../src/components/LanguageSelector.svelte","../../../../src/components/NavMobile.svelte","../../../../src/routes/artist/_layout.svelte"],"sourcesContent":["const debounce = (time, call) => {\n  let timeout = null\n  return () => {\n    if (timeout) return\n    timeout = setTimeout(() => {\n      timeout = null\n      call()\n    }, time)\n  }\n}\n\nexport default debounce\n","// @ts-check\nimport { readable } from 'svelte/store'\nimport debounce from '../util/debounce'\n\nconst getDimensions = () => {\n  // ssr default values\n  if (typeof window === 'undefined') return { width: 800, height: 600 }\n\n  const width = window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth\n  const height = window.innerHeight\n    || document.documentElement.clientHeight\n    || document.body.clientHeight\n  return { width, height }\n}\n\nexport default readable(getDimensions(), (set) => {\n  if (typeof window === 'undefined') return // ssr\n\n  const onChange = debounce(200, () => set(getDimensions()))\n  window.addEventListener('resize', onChange, false)\n  return () => window.removeEventListener('resize', onChange, false)\n})\n","<script>\n  import Loadable from 'svelte-loadable'\n  import dimensions from '../stores/dimensions'\n\n  export let Default\n  export let Mobile\n  export let Desktop\n  export let props\n\n  export let widthThreshhold = 500\n  export let heightThreshhold = null\n\n  $: width = $dimensions.width\n  $: height = $dimensions.height\n\n  let Component = Default\n  $: {\n    if (widthThreshhold && width < widthThreshhold ) Component = Mobile\n    else if (heightThreshhold && height < heightThreshhold ) Component = Mobile\n    else Component = Desktop\n  }\n</script>\n\n{#if Component && Component !== Default}\n  {#await Component()}\n    <svelte:component this={Default} {...props} />\n  {:then Result}\n    <svelte:component this={Result.default} {...props} />\n    <!-- promise was fulfilled -->\n  {/await}\n{:else}\n  <svelte:component this={Default} {...props} />\n{/if}\n","<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher()\n  const onClick = () => dispatch('click')\n</script>\n\n<div>\n  <button class=\"button hoverlay\" on:click={onClick}>\n    <slot />\n  </button>\n</div>\n\n<style>\n  .button {\n    cursor: pointer;\n    position: relative;\n    -webkit-tap-highlight-color: transparent;\n    text-decoration: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    outline: none;\n    background-color: transparent;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { MenuIcon } from 'svelte-feather-icons'\n  import FlatButton from './FlatButton.svelte'\n\n  const dispatch = createEventDispatcher()\n\n  const onMenu = () => dispatch('menu')\n</script>\n\n<style lang=\"scss\">\n  .margin {\n    margin: 8px;\n  }\n  .container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    border: 0;\n  }\n\n  .nav-icon {\n    :global(svg) {\n\t\t\theight: 36px;\n      width: 36px;\n\t\t}\n  }\n</style>\n\n<div class=\"margin\">\n  <div class=\"container nav-icon\">\n    <slot />\n\n    <FlatButton on:click={onMenu}>\n      <MenuIcon alt=\"open navigation\" />\n    </FlatButton>\n  </div>\n</div>\n\n\n","<script>\n  import { createEventDispatcher } from 'svelte'\n  export let open = false\n\n  const dispatch = createEventDispatcher()\n\n  const onClose = () => dispatch('close')\n</script>\n\n<div hidden={!open} >\n\t<div class=\"overlay mask\" on:click={onClose} />\n\t<div class=\"overlay container\">\n\t\t<slot />\n\t</div>\n</div>\n\n<style>\n\t.overlay {\n\t\tposition: fixed;\n\t\theight: 100vh;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: 999;\n\t}\n\t.mask {\n\t\tbackground-color: black;\n\t\twidth: 100vw;\n\t\topacity: 0.4;\n\t}\n\t.container {\n\t\twidth: 200px;\n\t\tbackground-color: white;\n\t}\n</style>","<script>\n  import { locale, locales } from 'svelte-intl'\n\n\tconst setLocale = e => locale.set(e.target.value)\n</script>\n\n<select value={$locale} on:change={setLocale}>\n  {#each $locales as l}\n    <option value={l}> {l} </option>\n  {/each}\n</select>\n","<script>\n\timport { _ } from 'svelte-intl'\n\timport Toolbar from './ToolbarMobile.svelte'\n\timport Drawer from './Drawer.svelte'\n\timport LanguageSelector from './LanguageSelector.svelte'\n\n\texport let segment = ''\n\texport let routes = []\n\texport let basepath = ''\n\n\t$: parsedSegment = segment === '/' ? '' : (segment || '')\n\t$: currentRoute = routes.find(route => route.path === parsedSegment)\n\n\tlet menuOpen = false\n\tconst toggleMenu = () => { menuOpen = !menuOpen }\n</script>\n\n<Toolbar on:menu={toggleMenu}>\n\t<div class=\"page-title\">\n\t\t{$_(currentRoute.title)}\n\t</div>\n</Toolbar>\n\n<Drawer open={menuOpen} on:close={toggleMenu}>\n\t<nav class=\"container noise\">\n\t\t{#each routes as { path, icon, title } (path)}\n\t\t\t<a\n\t\t\t\trel=prefetch\n\t\t\t\thref={`${basepath}/${path}`}\n\t\t\t\tclass=\"item-container\" class:selected={path === parsedSegment}\n\t\t\t\ton:click={toggleMenu}\n\t\t\t>\n\t\t\t\t<div class=\"item-icon\"> <svelte:component this={icon} /> </div>\n\t\t\t\t<div class=\"item-title\" href={path}> {$_(title)} </div>\n\t\t\t</a>\n\t\t{/each}\n\t</nav>\n\t<div class=\"language-container\">\n\t\t<LanguageSelector />\n\t</div>\n</Drawer>\n\n<style lang=\"scss\">\n\t@import '../style/colors.scss';\n\n\t.page-title {\n\t\tfont-family: 'Street Slab';\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t\tfont-size: 28px;\n\t}\n\t.container {\n\t\tmargin-top: 24px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\t}\n\n\t.item-container {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\twidth: fit-content;\n\t\tpadding: 8px;\n\t\tcolor: nth($blue, 1);\n\t\ttext-decoration: none;\n\n\t\t&.selected {\n\t\t\tcolor: nth($gray, 1);\n\t\t\tcursor: default;\n\t\t}\n\t}\n\n\t.item-icon {\n\t\theight: fit-content;\n\t\t:global(svg) {\n\t\t\theight: 18px;\n\t\t}\n\t}\n\t.item-title {\n\t}\n\n\t.language-container {\n\t\tposition: absolute;\n\t\tbottom: 10px;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\twidth: 100%;\n\t}\n</style>","<script>\n\timport { _ } from 'svelte-intl'\n\timport DimensionAware from '../../components/DimensionAware.svelte';\n\timport dimensions from '../../stores/dimensions.js'\n\timport NavMobile from '../../components/NavMobile.svelte'\n\timport routes from './_menu-routes'\n\n\texport let segment;\n\tconst basepath = 'artist'\n</script>\n\n<svelte:head>\n\t<meta name=\"Description\" content=\"{$_('metaDescription')}, {$_('artistPage.metaDescription')}\">\n</svelte:head>\n\n<DimensionAware\n\tDefault={NavMobile}\n\tDesktop={() => import('../../components/NavDesktop.svelte')}\n\tprops={{ segment, routes, basepath }}\n/>\n\n<slot />\n"],"names":["getDimensions","window","width","height","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","readable","set","time","call","timeout","onChange","setTimeout","addEventListener","removeEventListener","props","Default","Component","Result","default","Mobile","Desktop","widthThreshhold","heightThreshhold","$dimensions","onClick","dispatch","createEventDispatcher","onMenu","open","onClose","l","$locales","length","setLocale","$locale","e","locale","target","value","$_","currentRoute","title","icon","path","basepath","parsedSegment","toggleMenu","routes","menuOpen","segment","find","route","NavMobile","func"],"mappings":"0cAAA,ICIMA,EAAgB,iBAEE,oBAAXC,OAA+B,CAAEC,MAAO,IAAKC,OAAQ,KAQzD,CAAED,MANKD,OAAOG,YAChBC,SAASC,gBAAgBC,aACzBF,SAASG,KAAKD,YAIHJ,OAHDF,OAAOQ,aACjBJ,SAASC,gBAAgBI,cACzBL,SAASG,KAAKE,iBAINC,EAASX,IAAiB,SAACY,MAClB,oBAAXX,YDlBKY,EAAMC,EAClBC,ECmBEC,GDpBUH,ECoBU,IDpBJC,ECoBS,kBAAMF,EAAIZ,MDnBrCe,EAAU,KACP,WACDA,IACJA,EAAUE,WAAW,WACnBF,EAAU,KACVD,KACCD,aCcLZ,OAAOiB,iBAAiB,SAAUF,GAAU,GACrC,kBAAMf,OAAOkB,oBAAoB,SAAUH,GAAU,kCCSvBI,WAAbC,oRAAaD,uBAAbC,sbAPhBC,kPAAAA,6RAGsCF,WAApBG,OAAOC,oRAAaJ,uBAApBG,OAAOC,gVAFMJ,WAAbC,oRAAaD,uBAAbC,mXAFvBC,aAAaA,cAAcD,qdAnBnBA,IAAAA,QACAI,IAAAA,OACAC,IAAAA,QACAN,IAAAA,UAEAO,gBAAAA,aAAkB,UAClBC,iBAAAA,aAAmB,OAK1BN,EAAYD,6fAHbnB,EAAQ2B,EAAY3B,iCACpBC,EAAS0B,EAAY1B,uGAI2BmB,EAA7CK,GAAmBzB,EAAQyB,EAA8BF,EACpDG,GAAoBzB,EAASyB,EAA+BH,EACpDC,umBCXuBI,0QALpCC,EAAWC,0HACD,kBAAMD,EAAS,qkBCyBPE,kuBAxBlBF,EAAWC,yHAEF,kBAAMD,EAAS,imBCElBG,qBACuBC,qKADvBD,iKAPDA,KAAAA,gBAELH,EAAWC,gKAED,kBAAMD,EAAS,4PCETK,wLAALA,kGAAKA,gCAALA,8FADVC,sBAALC,iFAAAA,kGAAAA,2EAD+BC,qDAC/BD,+BADWE,4IACNH,yBAALC,4FAAAA,wBAAAA,SAAAA,8BADWE,4QAHI,SAAAC,UAAKC,EAAO9B,IAAI6B,EAAEE,OAAOC,6RCgBzCC,KAAGC,aAAaC,mRAAhBF,KAAGC,aAAaC,oFAcuBF,KAAGE,WADOC,+dAClBC,4CALrBC,uBAAYD,mEACkBA,SAASE,+BACtCC,gIAEsCJ,kLACVH,KAAGE,uCAAXE,mEALrBC,uBAAYD,iEACkBA,SAASE,uMAJ3CE,8BAAiCJ,cAAtCX,sHAAAA,kIAAAA,iRAAAA,uFAAKe,uFAALf,yEAAAA,gFAAAA,oJARcc,wCAMJE,0EAAoBF,4TAApBE,+VAjBFC,QAAAA,aAAU,SACVF,OAAAA,aAAS,SACTH,SAAAA,aAAW,KAKlBI,GAAW,2SAHZH,EAA4B,MAAZI,EAAkB,GAAMA,GAAW,kDACnDT,EAAeO,EAAOG,KAAK,SAAAC,UAASA,EAAMR,OAASE,2DAGnC,wBAAQG,GAAYA,uPCE9BI,WACAC,SACF,WAAEJ,QAASF,OAAAA,EAAQH,SAAAA,iTANSL,GAAG,0BAAsBA,GAAG,kJAA5BA,GAAG,0BAAsBA,GAAG,+EAItDa,gDAEF,WAAEH,QAASF,OAAAA,EAAQH,SAAAA,gPAV1B,IAAMA,GAAW,8HADNK,IAAAA"}