!function(){"use strict";const i=["client/chunk.c0036183.js","client/chunk.82b045bf.js","client/index.14558e43.js","client/client.93781b19.js","client/index.574ba993.js","client/chunk.0be79653.js","client/index.36cfe1c7.js","client/_layout.d73cc403.js","client/gallery.d7649f27.js","client/NavDesktop.001e4cca.js","client/chunk.04354f7d.js"].concat(["service-worker-index.html",".nojekyll","favicon.png","fonts/street-slab/STRSL___.eot","fonts/street-slab/STRSL___.svg","fonts/street-slab/STRSL___.ttf","fonts/street-slab/STRSL___.woff","global.css","great-success.png","img/main-links/artist.jpg","img/main-links/engineer.jpg","img/main-links/high-resolution/artist.jpg","img/main-links/high-resolution/engineer.png","img/pictures-2019-06-04/2048px/_ANA1829.jpg","img/pictures-2019-06-04/2048px/_ANA1837.jpg","img/pictures-2019-06-04/2048px/_ANA1869.jpg","img/pictures-2019-06-04/2048px/_ANA1874.jpg","img/pictures-2019-06-04/2048px/_ANA1880.jpg","img/pictures-2019-06-04/2048px/_ANA1882.jpg","img/pictures-2019-06-04/2048px/_ANA1886.jpg","img/pictures-2019-06-04/2048px/_ANA1900.jpg","img/pictures-2019-06-04/2048px/_ANA1915.jpg","img/pictures-2019-06-04/2048px/_ANA1916-2.jpg","img/pictures-2019-06-04/2048px/_ANA1916.jpg","img/pictures-2019-06-04/2048px/_ANA1925.jpg","img/pictures-2019-06-04/2048px/_ANA1926.jpg","img/pictures-2019-06-04/2048px/_ANA1931-2.jpg","img/pictures-2019-06-04/2048px/_ANA1931.jpg","img/pictures-2019-06-04/400px/_ANA1829.jpg","img/pictures-2019-06-04/400px/_ANA1837.jpg","img/pictures-2019-06-04/400px/_ANA1869.jpg","img/pictures-2019-06-04/400px/_ANA1874.jpg","img/pictures-2019-06-04/400px/_ANA1880.jpg","img/pictures-2019-06-04/400px/_ANA1882.jpg","img/pictures-2019-06-04/400px/_ANA1886.jpg","img/pictures-2019-06-04/400px/_ANA1900.jpg","img/pictures-2019-06-04/400px/_ANA1915.jpg","img/pictures-2019-06-04/400px/_ANA1916-2.jpg","img/pictures-2019-06-04/400px/_ANA1916.jpg","img/pictures-2019-06-04/400px/_ANA1925.jpg","img/pictures-2019-06-04/400px/_ANA1926.jpg","img/pictures-2019-06-04/400px/_ANA1931-2.jpg","img/pictures-2019-06-04/400px/_ANA1931.jpg","img/pictures-2019-06-04/blur/_ANA1829.jpg","img/pictures-2019-06-04/blur/_ANA1837.jpg","img/pictures-2019-06-04/blur/_ANA1869.jpg","img/pictures-2019-06-04/blur/_ANA1874.jpg","img/pictures-2019-06-04/blur/_ANA1880.jpg","img/pictures-2019-06-04/blur/_ANA1882.jpg","img/pictures-2019-06-04/blur/_ANA1886.jpg","img/pictures-2019-06-04/blur/_ANA1900.jpg","img/pictures-2019-06-04/blur/_ANA1915.jpg","img/pictures-2019-06-04/blur/_ANA1916-2.jpg","img/pictures-2019-06-04/blur/_ANA1916.jpg","img/pictures-2019-06-04/blur/_ANA1925.jpg","img/pictures-2019-06-04/blur/_ANA1926.jpg","img/pictures-2019-06-04/blur/_ANA1931-2.jpg","img/pictures-2019-06-04/blur/_ANA1931.jpg","img/pictures-2019-06-04/high-resolution/_ANA1829.jpg","img/pictures-2019-06-04/high-resolution/_ANA1837.jpg","img/pictures-2019-06-04/high-resolution/_ANA1869.jpg","img/pictures-2019-06-04/high-resolution/_ANA1874.jpg","img/pictures-2019-06-04/high-resolution/_ANA1880.jpg","img/pictures-2019-06-04/high-resolution/_ANA1882.jpg","img/pictures-2019-06-04/high-resolution/_ANA1886.jpg","img/pictures-2019-06-04/high-resolution/_ANA1900.jpg","img/pictures-2019-06-04/high-resolution/_ANA1915.jpg","img/pictures-2019-06-04/high-resolution/_ANA1916-2.jpg","img/pictures-2019-06-04/high-resolution/_ANA1916.jpg","img/pictures-2019-06-04/high-resolution/_ANA1925.jpg","img/pictures-2019-06-04/high-resolution/_ANA1926.jpg","img/pictures-2019-06-04/high-resolution/_ANA1931-2.jpg","img/pictures-2019-06-04/high-resolution/_ANA1931.jpg","logo-192.png","logo-512.png","manifest.json"]),e=new Set(i);self.addEventListener("install",e=>{e.waitUntil(caches.open("cache1559711628495").then(e=>e.addAll(i)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",i=>{i.waitUntil(caches.keys().then(async i=>{for(const e of i)"cache1559711628495"!==e&&await caches.delete(e);self.clients.claim()}))}),self.addEventListener("fetch",i=>{if("GET"!==i.request.method||i.request.headers.has("range"))return;const t=new URL(i.request.url);t.protocol.startsWith("http")&&(t.hostname===self.location.hostname&&t.port!==self.location.port||(t.host===self.location.host&&e.has(t.pathname)?i.respondWith(caches.match(i.request)):"only-if-cached"!==i.request.cache&&i.respondWith(caches.open("offline1559711628495").then(async e=>{try{const t=await fetch(i.request);return e.put(i.request,t.clone()),t}catch(t){const p=await e.match(i.request);if(p)return p;throw t}}))))})}();
